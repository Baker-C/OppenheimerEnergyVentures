/* tailwindcss-injection */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Global base styles */
@layer base {
  html { scroll-behavior: smooth; }
  body { @apply bg-white text-charcoal font-sans; }
  a { @apply text-primary hover:text-accent focus:outline-none focus:ring-2 focus:ring-accent/40 rounded-sm; }
}

/* Heading font utility (Rubik) */
@layer utilities {
  .font-heading { font-family: theme('fontFamily.heading'); }
}

/* Utilities for the "thin line with a dot" motif */
@layer utilities {
  .line-dot {
    position: relative;
  }
  .line-dot::after {
    content: "";
    position: absolute;
    right: -6px;
    top: 50%;
    transform: translateY(-50%);
    width: 6px;
    height: 6px;
    background: currentColor;
    border-radius: 9999px;
  }
  /* Slight top-only shadow */
  .shadow-top-sm {
    /* slightly darker and longer by ~1px */
    box-shadow: 0 -1px 3px 0 rgb(0 0 0 / 0.08);
  }
    /* Harsher shadows */
    .shadow-bottom-hard {
      box-shadow: 0 4px 12px -2px rgb(0 0 0 / 0.12), 0 10px 20px -10px rgb(0 0 0 / 0.12);
    }
    .shadow-top-hard {
      box-shadow: 0 -4px 12px -2px rgb(0 0 0 / 0.25), 0 -10px 20px -10px rgb(0 0 0 / 0.25);
    }
    /* Medium top shadow between sm and hard */
    .shadow-top-md {
      box-shadow: 0 -3px 8px -2px rgb(0 0 0 / 0.16), 0 -6px 14px -8px rgb(0 0 0 / 0.16);
    }
    /* Overlapping top shadow that casts over previous section */
    .shadow-top-over {
      position: relative;
    }
  .shadow-top-over::before {
      content: "";
      position: absolute;
      top: -24px;
      left: 0;
      right: 0;
      height: 24px;
      pointer-events: none;
      background: linear-gradient(to top,
        rgb(0 0 0 / 0.12),
        rgb(0 0 0 / 0.06) 35%,
        transparent
      );
    }
    /* Overlapping bottom shadow that casts over following section */
    .shadow-bottom-over {
      position: relative;
    }
    .shadow-bottom-over::after {
      content: "";
      position: absolute;
      bottom: -24px;
      left: 0;
      right: 0;
      height: 24px;
      pointer-events: none;
      background: linear-gradient(to bottom,
        rgb(0 0 0 / 0.12),
        rgb(0 0 0 / 0.06) 35%,
        transparent
      );
    }
  /* Delayed fade-in utility */
  @keyframes tw-fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  .fade-in-3s {
    opacity: 0;
    animation: tw-fade-in 600ms ease-out 3s forwards;
  }
  /* Per-letter fade-in */
  @keyframes letter-fade {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  .letter-fade {
    opacity: 0;
    display: inline-block;
  animation: letter-fade 700ms ease-out forwards;
  }
  /* Vertical-only shadow utility (no lateral spread perception) */
  .shadow-y {
    box-shadow: 0 8px 16px -12px rgb(0 0 0 / 0.25);
  }
  /* Force arrow cursor (suppress text I-beam) for nested text */
  .cursor-default-all, .cursor-default-all * { cursor: default !important; }
  /* Subtle outline/shadow to help hero text pop on mixed footage */
  .text-pop {
    text-shadow:
      0 1px 2px rgb(0 0 0 / 0.25), /* soft drop */
      0 0 1px rgb(255 255 255 / 0.6); /* faint edge lift */
  }

  /* Gentle fade-up for content blocks, triggered when element becomes in-view */
  /* Full edge-to-edge justification including last line */
  .justify-edge {
    text-align: justify;
    text-align-last: justify; /* Most modern browsers */
  }
  .justify-edge:after {
    /* Force last line justification workaround for some browsers by adding a full-width inline-block */
    content: "";
    display: inline-block;
    width: 100%;
  }
  @keyframes fade-up {
    from { opacity: 0; transform: translateY(8px); }
    to { opacity: 1; transform: translateY(0); }
  }
  .fade-up {
    opacity: 0;
    transform: translateY(8px);
    will-change: opacity, transform;
  }
  .in-view.fade-up {
    animation: fade-up 600ms ease-out forwards;
    animation-delay: 120ms; /* slight default delay */
  }
  @media (prefers-reduced-motion: reduce) {
    .fade-up { opacity: 1; transform: none; }
    .in-view.fade-up { animation: none; }
  }

  /* Animated line with traveling dot: scales then slides, revealing the line */
  @keyframes dot-intro-scale {
    0% { transform: translateY(-50%) scale(2); }
    35% { transform: translateY(-50%) scale(1.6); }
    55% { transform: translateY(-50%) scale(0.5); }
    65% { transform: translateY(-50%) scale(1.4); }
    80% { transform: translateY(-50%) scale(0.9); }
    95% { transform: translateY(-50%) scale(1.2); }
    100% { transform: translateY(-50%) scale(1); }
  }
  @keyframes dot-slide {
    0% { left: 0; }
    100% { left: calc(100% - var(--dot-size, 6px)); }
  }
  @keyframes line-reveal {
    0% { width: 0; }
    100% { width: 100%; }
  }
  .line-dot-animate {
    --dot-size: 10px;
    position: relative;
    /* overflow: hidden; */
  }
  /* Base dot at left and scaled up; animations apply when in-view */
  .line-dot-animate::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    width: var(--dot-size);
    height: var(--dot-size);
    background: currentColor;
    border-radius: 9999px;
    transform: translateY(-50%) scale(2);
  }
  /* Line is drawn by ::before as it reveals */
  .line-dot-animate::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    height: 1px;
    width: 0;
    background: currentColor;
    transform: translateY(-50%);
  }
  /* Triggered when the element is in the viewport */
  .in-view.line-dot-animate::after {
    animation:
      dot-intro-scale 600ms ease-out 10ms forwards,
      dot-slide 900ms cubic-bezier(.22,.61,.36,1) 700ms forwards;
  }
  .in-view.line-dot-animate::before {
    animation: line-reveal 900ms cubic-bezier(.22,.61,.36,1) 700ms forwards;
  }
  @media (prefers-reduced-motion: reduce) {
    .line-dot-animate::after {
      transform: translateY(-50%) scale(1);
      left: calc(100% - var(--dot-size, 6px));
    }
    .line-dot-animate::before { width: 100%; }
    .in-view.line-dot-animate::after,
    .in-view.line-dot-animate::before { animation: none; }
  }

  /* Center-starting line-dot: two dots shoot out left and right */
.line-dot-center-animate {
  --dot-size: 10px;
  position: relative;
  height: 6px;
}
.line-dot-center-animate i {
  display: block;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 0;
  height: 1px;
  background: currentColor;
}
.line-dot-center-animate i::before,
.line-dot-center-animate i::after {
  content: "";
  position: absolute;
  top: 50%;
  width: var(--dot-size);
  height: var(--dot-size);
  background: currentColor;
  border-radius: 9999px;
  transform: translateY(-50%) scale(0.8);
}
/* left dot */
.line-dot-center-animate i::before {
  left: calc(50% - var(--dot-size) / 2);
}
/* right dot */
.line-dot-center-animate i::after {
  left: calc(50% - var(--dot-size) / 2);
}

/* animations: lines expand left and right, dots shoot out */
@keyframes center-line-expand-left {
  0% { width: 0; left: 50%; }
  100% { width: 50%; left: 0; }
}
@keyframes center-line-expand-right {
  0% { width: 0; left: 50%; }
  100% { width: 50%; left: 50%; }
}
@keyframes center-dot-shoot-left {
  0% { transform: translateY(-50%) translateX(0) scale(0.8); }
  100% { transform: translateY(-50%) translateX(-100%) scale(1); }
}
@keyframes center-dot-shoot-right {
  0% { transform: translateY(-50%) translateX(0) scale(0.8); }
  100% { transform: translateY(-50%) translateX(100%) scale(1); }
}

/* in-view trigger to run animations similar timing to LineDot */
.in-view.line-dot-center-animate i {
  animation: center-line-expand-left 900ms cubic-bezier(.22,.61,.36,1) 300ms forwards,
            center-line-expand-right 900ms cubic-bezier(.22,.61,.36,1) 300ms forwards;
}
.in-view.line-dot-center-animate i::before {
  animation: center-dot-shoot-left 900ms cubic-bezier(.22,.61,.36,1) 300ms forwards;
}
.in-view.line-dot-center-animate i::after {
  animation: center-dot-shoot-right 900ms cubic-bezier(.22,.61,.36,1) 300ms forwards;
}
@media (prefers-reduced-motion: reduce) {
  .in-view.line-dot-center-animate i,
  .in-view.line-dot-center-animate i::before,
  .in-view.line-dot-center-animate i::after {
    animation: none;
    width: 100%;
    left: 0;
    transform: translateY(-50%) translateX(0) scale(1);
  }
}
}

/* CustomCursor.css */
.custom-cursor {
  position: fixed;
  width: 11px;
  height: 11px;
  background-color: rgba(0, 0, 0, 0.8);
  border-radius: 50%;
  pointer-events: none;
  transform: translate(-50%, -50%);
  z-index: 9999;
  transition: transform 0.1s ease-in-out; /* Changed from transform to transition */
}

.custom-cursor.clicked {
  transform: translate(-50%, -50%) scale(.7); /* Scale effect remains */
}
